#Check files and Load packages
list.files()
NPHL_data <- read.csv("NPHL_variants_long_table.csv")
summary(NPHL_data)
str(NPHL_data)
dim(NPHL_data)
library(tidyverse)
names(NHPL_data)
names(NPHL_data)
NPHL_data <- read.csv("Data_for_R")
NPHL_data <- read.csv("Data_for_R.csv")
View(NPHL_data)
dim(NPHL_data)
str(NPHL_data)
summary(NPHL_data)
names(NPHL_data)
library(tidyverse)
## Data cleaning ----
summary(NPHL_data$Age.years.)
pacman::p_load(
rio,        # importing data
here,       # relative file pathways
janitor,    # data cleaning and tables
lubridate,  # working with dates
matchmaker, # dictionary-based cleaning
epikit,     # age_categories() function
tidyverse   # data management and visualization
)
names(NPHL_data)
## Data cleaning ----
summary(NPHL_data$Age.years.)
linelist <- NPHL_data %>%
janitor::clean_names()
names(linelist)
# linelist data set is piped through select() command, and names() prints just the column names
linelist %>%
select(seq_name, age, age_years, sex, collection_week, year, region, nextclade_pango, clade, clade_display) %>%
names()  # display the column names
View(linelist)
# linelist data set is piped through select() command, and names() prints just the column names
linelist <- linelist %>%
select(seq_name, age, age_years, sex, collection_week, year, region, nextclade_pango, clade, clade_display) %>%
names()  # display the column names
linelist <- NPHL_data %>%
janitor::clean_names()
# linelist data set is piped through select() command, and names() prints just the column names
linelist_vars <- linelist %>%
select(seq_name, age, age_years, sex, collection_week, year, region, nextclade_pango, clade, clade_display) %>%
names()  # display the column names
View(linelist)
# linelist data set is piped through select() command, and names() prints just the column names
linelist_vars <- linelist %>%
select(seq_name, age, age_years, sex, collection_week, year, region, nextclade_pango, clade, clade_display)
View(linelist_vars)
linelist_vars %>%
mutate(
# Create categories
age_group = dplyr::case_when(
age <= 5            ~ "0-5",
age > 6 & age <= 17 ~ "6-17",
age > 17 & age <= 45 ~ "17-45",
age > 45             ~ "> 45"
),
# Convert to factor
age_group = factor(
age_group,
level = c("0-14", "15-44","45-64", "> 64")
)
)
linelist_vars %>%
mutate(
# Create categories
age_group = dplyr::case_when(
age_years <= 5            ~ "0-5",
age_years > 6 & age_years <= 17 ~ "6-17",
age_years > 17 & age_years <= 45 ~ "17-45",
age_years > 45             ~ "> 45"
),
# Convert to factor
age_group = factor(
age_group,
level = c("0-14", "15-44","45-64", "> 64")
)
)
linelist_vars %>%
mutate(
# Create categories
age_group = dplyr::case_when(
age_years <= 5            ~ "0-5",
age_years > 6 & age_years <= 17 ~ "6-17",
age_years > 17 & age_years <= 45 ~ "17-45",
age_years > 45             ~ "> 45"
),
# Convert to factor
age_group = factor(
age_group,
level = c("0-5", "6-17","17-45", "> 45")
)
)
View(linelist_vars)
linelist_vars <- linelist_vars %>%
mutate(
# Create categories
age_group = dplyr::case_when(
age_years <= 5            ~ "0-5",
age_years > 6 & age_years <= 17 ~ "6-17",
age_years > 17 & age_years <= 45 ~ "17-45",
age_years > 45             ~ "> 45"
),
# Convert to factor
age_group = factor(
age_group,
level = c("0-5", "6-17","17-45", "> 45")
)
)
View(linelist_vars)
skimr::skim(linelist_vars)
class(linelist_vars$age_group)
class(linelist_vars$clade_display)
class(linelist_vars$nextclade_pango)
## changing variables to factor
pacman::p_load(
lubridate,     # working with dates
forcats,       # factors
aweek,         # create epiweeks with automatic factor levels
janitor,       # tables
)
install.packages("forcats")
install.packages("aweek")
install.packages("lubridate")
## changing variables to factor
library(aweek)
library(forcats)
library(janitor)
library(lubridate)
names(linelist_vars)
linelist_vars <- linelist_vars %>%
mutate(age_group = fct_relevel(age_group))
library(tidyr)
linelist_vars <- linelist_vars %>%
mutate(age_group = fct_relevel(age_group))
pacman::p_load(
rio,        # importing data
here,       # relative file pathways
janitor,    # data cleaning and tables
lubridate,  # working with dates
matchmaker, # dictionary-based cleaning
epikit,     # age_categories() function
tidyverse   # data management and visualization
)
linelist_vars <- linelist_vars %>%
mutate(age_group = fct_relevel(age_group))
linelist_vars <- linelist_vars %>%
mutate(sex = fct_relevel(sex))
linelist_vars <- linelist_vars %>%
mutate(region = fct_relevel(region))
linelist_vars <- linelist_vars %>%
mutate(nextclade_pango = fct_relevel(nextclade_pango))
linelist_vars <- linelist_vars %>%
mutate(clade = fct_relevel(clade))
View(linelist_vars)
class(linelist_vars)
skimr::skim(linelist_vars)
summary(linelist_vars$clade)
summary(linelist_vars$nextclade_pango)
#plotting
ggplot(data = linelist_vars)+
geom_bar(mapping = aes(x = region, fill = age_group)) +
scale_fill_discrete(drop = FALSE)+                        # show all age groups in the legend, even those not present
labs(
title = "Age groups by Region")
ggplot(data = linelist_vars)+
geom_bar(mapping = aes(x = region, fill = clade)) +
scale_fill_discrete(drop = FALSE)+                        # show all age groups in the legend, even those not present
labs(
title = "clades by Region")
ggplot(data = linelist_vars)+
geom_bar(mapping = aes(x = age_group, fill = clade)) +
scale_fill_discrete(drop = FALSE)+                        # show all age groups in the legend, even those not present
labs(
title = "Age groups by Region")
ggplot(data = linelist_vars)+
geom_bar(mapping = aes(x = age_group, fill = clade)) +
scale_fill_discrete(drop = FALSE)+                        # show all age groups in the legend, even those not present
labs(
title = "Age groups by clades")
ggplot(data = linelist_vars)+
geom_bar(mapping = aes(x = region, fill = nextclade_pango)) +
scale_fill_discrete(drop = FALSE)+                        # show all age groups in the legend, even those not present
labs(
title = "clades by Region")
ggplot(data = linelist_vars)+
geom_bar(mapping = aes(x = age_group, fill = nextclade_pango)) +
scale_fill_discrete(drop = FALSE)+                        # show all age groups in the legend, even those not present
labs(
title = "lineages by age groups")
linelist_vars <- linelist_vars %>%
mutate(clade_display = fct_relevel(clade_display))
ggplot(data = linelist_vars)+
geom_bar(mapping = aes(x = region, fill = clade_display)) +
scale_fill_discrete(drop = FALSE)+                        # show all age groups in the legend, even those not present
labs(
title = "clades by Region")
## Data cleaning ----
summary(NPHL_data$Age.years.)
table(linelist_vars$age_group, linelist_vars$nextclade_pango)
table(linelist_vars$region, linelist_vars$nextclade_pango)
BiocManager::install("ggtree")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ggtree")
pacman::p_load(
rio,        # importing data
here,       # relative file pathways
janitor,    # data cleaning and tables
lubridate,  # working with dates
matchmaker, # dictionary-based cleaning
epikit,     # age_categories() function
tidyverse   # data management and visualization
)
library(aweek)
library(forcats)
library(janitor)
library(lubridate)
library(tidyr)
#plotting
ggplot(data = linelist_vars)+
geom_bar(mapping = aes(x = region, fill = age_group)) +
scale_fill_discrete(drop = FALSE)+                        # show all age groups in the legend, even those not present
labs(
title = "Age groups by Region")
ggplot(data = linelist_vars)+
geom_bar(mapping = aes(x = region, fill = clade)) +
scale_fill_discrete(drop = FALSE)+                        # show all age groups in the legend, even those not present
labs(
title = "clades by Region")
ggplot(data = linelist_vars)+
geom_bar(mapping = aes(x = region, fill = clade_display)) +
scale_fill_discrete(drop = FALSE)+                        # show all age groups in the legend, even those not present
labs(
title = "clades by Region")
ggplot(data = linelist_vars)+
geom_bar(mapping = aes(x = age_group, fill = clade)) +
scale_fill_discrete(drop = FALSE)+                        # show all age groups in the legend, even those not present
labs(
title = "Age groups by clades")
ggplot(data = linelist_vars)+
geom_bar(mapping = aes(x = region, fill = nextclade_pango)) +
scale_fill_discrete(drop = FALSE)+                        # show all age groups in the legend, even those not present
labs(
title = "clades by Region")
ggplot(data = linelist_vars)+
geom_bar(mapping = aes(x = age_group, fill = nextclade_pango)) +
scale_fill_discrete(drop = FALSE)+                        # show all age groups in the legend, even those not present
labs(
title = "lineages by age groups")
View(NPHL_data)
install.packages("data.table")
install.packages("XLConnect")
